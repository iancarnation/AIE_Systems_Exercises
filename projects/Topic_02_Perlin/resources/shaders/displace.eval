#version 420

layout (triangles, equal_spacing, ccw) in;

in vec2 tcTexCoord[];

out vec2 teTexCoord;

uniform sampler2D uDiffuseMap;

uniform mat4 uViewProjectionModel;

void main()
{
	// calculate texture coordinate
	vec2 t0 = gl_TessCoord.x * tcTexCoord[0];
	vec2 t1 = gl_TessCoord.y * tcTexCoord[1];
	vec2 t2 = gl_TessCoord.z * tcTexCoord[2];

	teTexCoord = t0 + t1 + t2;

	float disp = texture(uDiffuseMap, teTexCoord).r;

	// calculate position
	vec4 p0 = gl_TessCoord.x * gl_in[0].gl_Position;
	vec4 p1 = gl_TessCoord.y * gl_in[1].gl_Position;
	vec4 p2 = gl_TessCoord.z * gl_in[2].gl_Position;

	vec4 position = p0 + p1 + p2;
	position.y += disp * 4;

	gl_Position = uViewProjectionModel * position;
}